name: Python Package CI/CD

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      publish_to_pypi:
        description: 'Publish to PyPI after tests'
        type: boolean
        default: false
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with ruff
      run: |
        ruff check .
    - name: Type check with mypy
      run: |
        mypy src tests
    - name: Test with unittest
      run: |
        python -m unittest discover tests

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    # Run on tagged commits (v*) or when manually triggered with publish_to_pypi=true
    if: >
      (startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push') || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_pypi == 'true')
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build package
      run: python -m build
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}